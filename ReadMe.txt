{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
	My game is entitled Treasure Tunnels. In this game, you play as a treasure hunter who is exploring and looting the depths of a cave filled with riches. But beware, you are not alone in this cave. Wandering creatures lurk and seek to devour you alive. You must navigate your way through the creature filled tunnels in order to reach the coveted gold. As you successfully reap the riches and journey deeper into the cave, The  creatures move faster and become more deadly. How much gold can you loot before you meet your doom?\
	While coding my game, I ran into many different problems. My biggest problem was encountered halfway through the project. At that time I was making a maze where the maze walls were comprised of one giant array that moved around the player dot when the direction buttons were pressed. After I expanded my maze to a certain point, the meggy was no longer able to compile the code as it was too big. This problem forced me to erase all my progress and create a smaller maze. I decided that I couldn\'92t make a \'93good\'94 maze with the meggy array limit, so I changed up my game a bit. Now, instead of a maze, I have my treasure tunnels game. A big difficulty during this project was the movement of the dots. Because everything is moving around the stationary center dot, whenever movement was needed, every dot except the player dot had to be moved instead of just the player dot moving itself. This resulted in a massive amount of code and confusion. Although there were difficulties like this during coding, I was surprised that I was actually able to solve my own problems. It took a while for some things, but eventually everything worked out. This project definitely helped me become a better at independently solving problems.\
	When I got stuck on complicated code and concepts, I looked to teachers and classmates for help. Without their help, my game wouldn\'92t be nearly as good as it is now. For example, the movement code, which allowed me to create a bigger map than the 8x8 meggy screen, was provided by Mr. Kiang. Without that code, this game would\'92ve been impossible. When I was working at home and needed help, I turned to the Arduino Forums. Here, I found a lot of useful code and information. One of the codes I got off the Arduino Forums was the code to restart the game without turning the meggy off. \
	While playing my game, I have found one bug that allows the player dot to enter the wall. This bug only happens when the player presses two direction buttons at the same time, causing the walls to move diagonally. This bug happens because my code for the wall collision detection is only set to activate when the four direction buttons are pressed individually and not at the same time. This bug only works with corners of walls. Once the player dot is in the wall, it cannot go anywhere except back from where it came. Because this bug can\'92t help the player at all during the game, I decided that It wasn\'92t worth spending time to fix because I had other things to finish.\
	If I had more time to work on this project, I would probably add code to spawn the gold in a random room rather than spawning it in a set order. I would also try to expand my map. I don\'92t know if this is possible though because my current map is already nearing the size limit. I would also want to change the movement of the enemies in each room because there isn\'92t a wide variety of enemy movement right now. This would keep the game interesting and exciting. I would also try and have the score be displayed on the screen after the player dies. I wanted to add this in my game but I didn\'92t have enough time.\
	This project taught me that programming requires logic and organization. Before this project, when I looked at code, I only saw randomly placed numbers and letters. After actually creating my own code, I now understand that programming is a language that is actually very logical in its placement of numbers and letters. This project also caused me to see games and game designers in a new way. I now have much more respect for game designers and their games. After putting in many hours of hard work to produce a decent meggy game, I realized how much work it must take to create actual video games. This project also helped me develop my problem solving and time management skills. }